// This file is generated by SQLBoiler (https://github.com/databrary/sqlboiler)
// and is meant to be re-generated in place and/or deleted at any time.
// EDIT AT YOUR OWN RISK

package public

import (
	"github.com/databrary/sqlboiler/strmangle"
	"github.com/pkg/errors"
)

// M type is for providing columns and column values to UpdateAll.
type M map[string]interface{}

// ErrSyncFail occurs during insert when the record could not be retrieved in
// order to populate default value information. This usually happens when LastInsertId
// fails or there was a primary key configuration that was not resolvable.
var ErrSyncFail = errors.New("public: failed to synchronize data after insert")

type insertCache struct {
	query        string
	retQuery     string
	valueMapping []uint64
	retMapping   []uint64
}

type updateCache struct {
	query        string
	valueMapping []uint64
}

func makeCacheKey(wl, nzDefaults []string) string {
	buf := strmangle.GetBuffer()

	for _, w := range wl {
		buf.WriteString(w)
	}
	if len(nzDefaults) != 0 {
		buf.WriteByte('.')
	}
	for _, nz := range nzDefaults {
		buf.WriteString(nz)
	}

	str := buf.String()
	strmangle.PutBuffer(buf)
	return str
}

// Enum values for release
const (
	ReleasePRIVATE  = "PRIVATE"
	ReleaseSHARED   = "SHARED"
	ReleaseEXCERPTS = "EXCERPTS"
	ReleasePUBLIC   = "PUBLIC"
)

// Enum values for permission
const (
	PermissionNONE   = "NONE"
	PermissionPUBLIC = "PUBLIC"
	PermissionSHARED = "SHARED"
	PermissionREAD   = "READ"
	PermissionEDIT   = "EDIT"
	PermissionADMIN  = "ADMIN"
)

// Enum values for data_type
const (
	DataTypeText    = "text"
	DataTypeNumeric = "numeric"
	DataTypeDate    = "date"
	DataTypeVoid    = "void"
)

// Enum values for notice_delivery
const (
	NoticeDeliveryNone   = "none"
	NoticeDeliverySite   = "site"
	NoticeDeliveryWeekly = "weekly"
	NoticeDeliveryDaily  = "daily"
	NoticeDeliveryAsync  = "async"
)
